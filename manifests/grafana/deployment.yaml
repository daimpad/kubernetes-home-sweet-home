apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana-main
  namespace: grafana
  labels:
    app: grafana
    component: main
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
        component: main
      # annotations:
      #   scheduler.alpha.kubernetes.io/affinity: >
      #     {
      #       "nodeAffinity": {
      #         "requiredDuringSchedulingIgnoredDuringExecution": {
      #           "nodeSelectorTerms": [
      #             {
      #               "matchExpressions": [
      #                 {
      #                   "key": "affinity/grafana",
      #                   "operator": "In",
      #                   "values": ["true"]
      #                 }
      #               ]
      #             }
      #           ]
      #         }
      #       }
      #     }
    spec:
      containers:
      - image: grafana/grafana:4.1.0-beta1
        name: grafana-main
        # env:
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        # - name: GF_AUTH_GITHUB_CLIENT_SECRET
        #   valueFrom:
        #     secretKeyRef:
        #       name: grafana
        #       key: github-client-secret
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: config
          mountPath: /etc/grafana
      volumes:
      - name: grafana-data
        hostPath:
          path: /srv/grafana-data
      - name: config
        configMap:
          name: grafana-server
